from constants import *
import numpy as np
from _typeshed import Incomplete
from typing import List, Tuple

def make_bbox_larger(coordinates: Tuple[int, int, int, int], percentage: float) -> Tuple[float, float, float, float]: ...
def clip_detections(detections: List[Tuple[int, int, int, int]], image_shape) -> List[Tuple[int, int, int, int]]: ...

class Googlifier:
    face_detector: Incomplete
    landmark_detector: Incomplete
    logger: Incomplete
    def __init__(self) -> None: ...
    def detect_eyes_and_googlify(self, image_byte_array: bytes) -> Tuple[bool, bytes]: ...
    def detect_faces(self, image: np.ndarray) -> List[Tuple[int, int, int, int]]: ...
    def detect_eyes(self, image: np.ndarray, faces: List[Tuple[int, int, int, int]]) -> List[Tuple[int, int, int, int]]: ...
    @staticmethod
    def draw_googly_eyes(eyes: List[Tuple[int, int, int, int]], image: np.ndarray) -> np.ndarray: ...
